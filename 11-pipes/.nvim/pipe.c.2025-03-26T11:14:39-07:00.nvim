#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <sys/wait.h>
#include <unistd.h>

// modify the example
// parent should send a string to the child
// child should send the string back to the parent in upper case
// parent should print out the received string

void to_uppercase(char *str) {
  for (int i = 0; str[i]; i++) {
    str[i] = str[i] - 32;
  }
}

int main(int argc, char *argv[]) {
  int pipe1[2]; //parent to child
  int pipe2[2]; //child to parent
  char buf;
  pid_t cpid;

  if (argc != 2) {
    fprintf(stderr, "Usage: %s <string>\n", argv[0]);
    exit(EXIT_FAILURE);
  }

  if (pipe(pipefd) == -1) {
    perror("pipe");
    exit(EXIT_FAILURE);
  }

  cpid = fork();
  if (cpid == -1) {
    perror("fork");
    exit(EXIT_FAILURE);
  }

  if (cpid == 0) { /* Child reads from pipe */
    // close(pipefd[1]); /* Close unused write end */

    while (read(pipefd[0], &buf, 1) > 0)
      // write(STDOUT_FILENO, &buf, 1);
      // convert to upper case
      to_uppercase(&buf);

    // write(STDOUT_FILENO, "\n", 1);
    close(pipefd[0]);
    _exit(EXIT_SUCCESS);

  } else {            /* Parent writes argv[1] to pipe */
    close(pipefd[0]); /* Close unused read end */
    write(pipefd[1], argv[1], strlen(argv[1]));
    close(pipefd[1]); /* Reader will see EOF */
    wait(NULL);       /* Wait for child */
    exit(EXIT_SUCCESS);
  }
}
