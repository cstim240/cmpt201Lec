#define POSIX_C_SOURCE 200809L
#include <pthread.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>

static pthread_mutex_t mutex0 = PTHREAD_MUTEX_INITIALIZER;
static pthread_mutex_t mutex1 = PTHREAD_MUTEX_INITIALIZER;

static void *thread0(void *arg) {
  pthread_mutex_lock(&mutex0);
  printf("thread0: mutex0\n");
  pthread_mutex_lock(&mutex1);
  printf("thread0: mutex1\n");
  pthread_mutex_unlock(&mutex0);
  pthread_mutex_unlock(&mutex1);
  pthread_exit(0);
}

static void *thread1(void *arg) {
  pthread_mutex_lock(&mutex1);
  printf("thread1: mutex1\n");
  pthread_mutex_lock(&mutex0);
  printf("thread1: mutex0\n");
  pthread_mutex_unlock(&mutex0);
  pthread_mutex_unlock(&mutex1);
  pthread_exit(0);
}

int main(int argc, char *argv[]) {
  pthread_t t1;
  pthread_create(&t1, NULL, func, NULL);
  pthread_t t2;
  pthread_create(&t2, NULL, func, NULL);

  pthread_join(t1, NULL);
  pthread_join(t2, NULL);
}
