#include <stdio.h>
#include <stdlib.h>
#include <sys/wait.h>
#include <unistd.h>

int main() {
  pid_t pid = fork();
  // if pid == 0 then its a child, if not 0, then its parent 
  if (pid) {
    int wstatus = 0;
    if (waitpid(pid, &wstatus, 0) == -1) {
    perror("waitpid");
    exit(EXIT_FAILURE);
    }

    if (WIFEXITED(wstatus)) {
      printf("Child done with exit status: %d\n", WEXITSTATUS(wstatus));
    } else {
      printf("Child did not exit normally.\n");
    }
  } else {
    if (execl("usr/bin/ls", "/usr/bin/ls", "-a", "-l", NULL) == -1) {
    perror("execl");
    exit(EXIT_FAILURE);
    } 
  }

  return 0;
}
